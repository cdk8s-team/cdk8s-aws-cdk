// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 * Topic is the Schema for the Topics API
 *
 * @schema Topic
 */
export class Topic extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Topic"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'sns.services.k8s.aws/v1alpha1',
    kind: 'Topic',
  }

  /**
   * Renders a Kubernetes manifest for "Topic".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: TopicProps = {}): any {
    return {
      ...Topic.GVK,
      ...toJson_TopicProps(props),
    };
  }

  /**
   * Defines a "Topic" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: TopicProps = {}) {
    super(scope, id, {
      ...Topic.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...Topic.GVK,
      ...toJson_TopicProps(resolved),
    };
  }
}

/**
 * Topic is the Schema for the Topics API
 *
 * @schema Topic
 */
export interface TopicProps {
  /**
   * @schema Topic#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * TopicSpec defines the desired state of Topic
   *
   * @schema Topic#spec
   */
  readonly spec?: TopicSpec;

}

/**
 * Converts an object of type 'TopicProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TopicProps(obj: TopicProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_TopicSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TopicSpec defines the desired state of Topic
 *
 * @schema TopicSpec
 */
export interface TopicSpec {
  /**
   * @schema TopicSpec#deliveryPolicy
   */
  readonly deliveryPolicy?: string;

  /**
   * @schema TopicSpec#displayName
   */
  readonly displayName?: string;

  /**
   * @schema TopicSpec#kmsMasterKeyID
   */
  readonly kmsMasterKeyId?: string;

  /**
   * @schema TopicSpec#name
   */
  readonly name: string;

  /**
   * @schema TopicSpec#policy
   */
  readonly policy?: string;

  /**
   * @schema TopicSpec#tags
   */
  readonly tags?: TopicSpecTags[];

}

/**
 * Converts an object of type 'TopicSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TopicSpec(obj: TopicSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'deliveryPolicy': obj.deliveryPolicy,
    'displayName': obj.displayName,
    'kmsMasterKeyID': obj.kmsMasterKeyId,
    'name': obj.name,
    'policy': obj.policy,
    'tags': obj.tags?.map(y => toJson_TopicSpecTags(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema TopicSpecTags
 */
export interface TopicSpecTags {
  /**
   * @schema TopicSpecTags#key
   */
  readonly key?: string;

  /**
   * @schema TopicSpecTags#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'TopicSpecTags' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_TopicSpecTags(obj: TopicSpecTags | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

